{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coading\\\\minor\\\\Book-recommend\\\\src\\\\context..js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"the lost world\");\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [resultTitle, setResultTitle] = useState(\"\");\n  const requestData = {\n    \"keyword\": searchTerm\n  };\n  const fetchBooks = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = axios.post('http://13.233.110.169/scrape', requestData); //     const response = await fetch(`${URL}${searchTerm}`);\n\n      const data = await response.json(); //     const {docs} = data;\n      //     if(docs){\n      //         const newBooks = docs.slice(0, 20).map((bookSingle) => {\n      //             const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\n      //             return {\n      //                 id: key,\n      //                 author: author_name,\n      //                 cover_id: cover_i,\n      //                 edition_count: edition_count,\n      //                 first_publish_year: first_publish_year,\n      //                 title: title\n      //             }\n      //         });\n      //         setBooks(newBooks);\n      //         if(newBooks.length > 1){\n      //             setResultTitle(\"Your Search Result\");\n      //         } else {\n      //             setResultTitle(\"No Search Result Found!\")\n      //         }\n      //     } else {\n      //         setBooks([]);\n      //         setResultTitle(\"No Search Result Found!\");\n      //     }\n      //\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchBooks();\n  }, [searchTerm, fetchBooks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      books,\n      setSearchTerm,\n      resultTitle,\n      setResultTitle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppProvider, \"3hSDyT1MQNcUQQf/ja/lOYcr6pY=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","axios","AppContext","createContext","AppProvider","children","searchTerm","setSearchTerm","books","setBooks","loading","setLoading","resultTitle","setResultTitle","requestData","fetchBooks","response","post","data","json","error","console","log","useGlobalContext"],"sources":["D:/Coading/minor/Book-recommend/src/context..js"],"sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nimport axios from 'axios';\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [searchTerm, setSearchTerm] = useState(\"the lost world\");\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultTitle, setResultTitle] = useState(\"\");\r\n\r\n    const requestData = {\r\n        \"keyword\": searchTerm,\r\n    }\r\n    \r\n    const fetchBooks = useCallback(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const response=axios.post('http://13.233.110.169/scrape', requestData)\r\n        //     const response = await fetch(`${URL}${searchTerm}`);\r\n            const data = await response.json();\r\n        //     const {docs} = data;\r\n            \r\n        //     if(docs){\r\n        //         const newBooks = docs.slice(0, 20).map((bookSingle) => {\r\n        //             const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\r\n\r\n        //             return {\r\n        //                 id: key,\r\n        //                 author: author_name,\r\n        //                 cover_id: cover_i,\r\n        //                 edition_count: edition_count,\r\n        //                 first_publish_year: first_publish_year,\r\n        //                 title: title\r\n        //             }\r\n        //         });\r\n\r\n        //         setBooks(newBooks);\r\n\r\n        //         if(newBooks.length > 1){\r\n        //             setResultTitle(\"Your Search Result\");\r\n        //         } else {\r\n        //             setResultTitle(\"No Search Result Found!\")\r\n        //         }\r\n        //     } else {\r\n        //         setBooks([]);\r\n        //         setResultTitle(\"No Search Result Found!\");\r\n        //     }\r\n        //\r\n             setLoading(false);\r\n        } catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }, [searchTerm]);\r\n\r\n    useEffect(() => {\r\n        fetchBooks();\r\n    }, [searchTerm, fetchBooks]);\r\n\r\n    return (\r\n        <AppContext.Provider value = {{\r\n            loading, books, setSearchTerm, resultTitle, setResultTitle,\r\n        }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext, AppProvider};"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAChC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,gBAAD,CAA5C;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMiB,WAAW,GAAG;IAChB,WAAWR;EADK,CAApB;EAIA,MAAMS,UAAU,GAAGf,WAAW,CAAC,YAAW;IACtCW,UAAU,CAAC,IAAD,CAAV;;IACA,IAAG;MACC,MAAMK,QAAQ,GAACf,KAAK,CAACgB,IAAN,CAAW,8BAAX,EAA2CH,WAA3C,CAAf,CADD,CAEH;;MACI,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAHD,CAIH;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACKR,UAAU,CAAC,KAAD,CAAV;IACJ,CAjCD,CAiCE,OAAMS,KAAN,EAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAT,UAAU,CAAC,KAAD,CAAV;IACH;EACJ,CAvC6B,EAuC3B,CAACL,UAAD,CAvC2B,CAA9B;EAyCAP,SAAS,CAAC,MAAM;IACZgB,UAAU;EACb,CAFQ,EAEN,CAACT,UAAD,EAAaS,UAAb,CAFM,CAAT;EAIA,oBACI,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAI;MAC1BL,OAD0B;MACjBF,KADiB;MACVD,aADU;MACKK,WADL;MACkBC;IADlB,CAA9B;IAAA,UAGKR;EAHL;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CA9DD;;GAAMD,W;;KAAAA,W;AAgEN,OAAO,MAAMmB,gBAAgB,GAAG,MAAM;EAAA;;EAClC,OAAOzB,UAAU,CAACI,UAAD,CAAjB;AACH,CAFM;;IAAMqB,gB;;AAIb,SAAQrB,UAAR,EAAoBE,WAApB"},"metadata":{},"sourceType":"module"}